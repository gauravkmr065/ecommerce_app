{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","constants/cartConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","constants/productConstants.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/OrderListScreen.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js","screens/ProductScreen.module.css"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","Header","useDispatch","navigate","useNavigate","useSelector","state","Navbar","bg","variant","expand","collapseOnSelect","className","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","border","borderRadius","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProductDetails","ProductCarousel","productTopRated","loading","error","products","useEffect","Carousel","pause","map","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","productList","marginTop","sm","md","lg","xl","ProductScreen","match","useState","qty","setQty","setRating","comment","setComment","useParams","productDetails","productReviewCreate","successProductReview","success","errorProductReview","loadingProductReview","alert","ListGroup","classes","padding","paddingBottom","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","disabled","reviews","length","review","createdAt","substring","onSubmit","productId","preventDefault","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","useLocation","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","updateLoading","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","console","log","put","updateUserProfile","Table","striped","bordered","hover","responsive","borderBottom","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","history","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","window","paypal","href","amount","onSuccess","paymentResult","orderId","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","OrderListScreen","orderList","App","Fragment","path","element","reducer","combineReducers","action","existingItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.28c46a20.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET';\r\n\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, \r\n  USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET,\r\n  USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST});\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/users/login', { email, password }, config );//url, body, headers\r\n    \r\n    //console.log(data,'user login data');\r\n\r\n    dispatch({type: USER_LOGIN_SUCCESS, payload: data});\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems');\r\n  localStorage.removeItem('shippingAddress');\r\n  localStorage.removeItem('paymentMethod');\r\n\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({type:USER_DETAILS_RESET});///on logout erase/reset the user details\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n  dispatch({ type: CART_CLEAR_ITEMS });\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: USER_REGISTER_REQUEST});\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/users', { name, email, password }, config);\r\n\r\n    dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data});//same-way\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    });\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const { userLogin: { userInfo }} = getState(); //deep destructuring\r\n\r\n    const config = {\r\n      headers: {\r\n        /* 'Content-Type': 'application/json', */\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config); //url--/api/users/profile--be route\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST});\r\n\r\n    const { userLogin: { userInfo }} = getState();\r\n    console.log(userInfo, 'userInfo at the time of login before update');\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n    const {email, isAdmin, name, _id} = data;\r\n\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    //console.log(data,'updated user data response from server');\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    //updating the localstorage with newly recieved token and data from server\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: {email, isAdmin, name, _id} });\r\n    //console.log('triggering user profile details');\r\n    \r\n    //console.log('triggering userInfo login_success after the update');\r\n    dispatch({type: USER_LOGIN_SUCCESS, payload: data}); //user profile name in header fix\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n    //console.log(data);\r\n\r\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    //const { data } = await axios.delete(`/api/users/${id}`, config);\r\n    //console.log(data);\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n    //console.log(data, \"updated/edited user data recieved from server\");\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });//updating the user details with the updated data\r\n    //dispatch({ type: USER_DETAILS_RESET });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message: error.message\r\n    })\r\n  }\r\n}","import React from \"react\";\r\nimport { useNavigate} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n//import SearchBox from './SearchBox'\r\n//import { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  /* const userDetails = useSelector((state) => state.userDetails);\r\n  const {user} = userDetails; */\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    navigate('/'); \r\n  }\r\n\r\n  //<Nav className = 'ml-auto'>\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        bg=\"primary\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        collapseOnSelect\r\n        className=\"navbar-dark bg-primary\"\r\n      >\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Build-&-Buy</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\r\n\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}> Logout </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* <LinkContainer to='admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer> */}\r\n                  <LinkContainer to='admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Build-&-Buy</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {//default props value//i.e. not adding color props in \r\n  color: '#f8e825',\r\n}\r\n\r\n/* Rating.propTypes = {//type checking our passed in props//if number instead of string //then error\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n */\r\nexport default Rating","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card\r\n      className=\"my-3 px-4 p-4\"\r\n      border=\"primary\"\r\n      style={{ borderRadius: \"12px\" }}\r\n    >\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          {product.rating && (<Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />)}\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">₹{product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  //class='sr-only'\r\n  //className=\"visually-hidden\"\r\n  //variant='primary'\r\n  return (\r\n    <Spinner animation='border' role='status' variant='secondary' \r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className=\"visually-hidden\" >Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","import axios from \"axios\";\r\nimport { \r\n  PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_CREATE_REVIEW_RESET, \r\n  PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from \"../constants/productConstants\";\r\n\r\nexport const listProducts = (pageNumber = '') => async (dispatch) => {\r\n  //asyncThunk\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    //response.data\r\n    //console.log(response, response.data);\r\n    const { data } = await axios.get(\"/api/products\"); //--/${pageNumber}\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message//--generic err msg\r\n    }); //error.response.data.message--postman test error msg\r\n    //axios create this object. if backend returns error code then it return the result from backend in this object:\r\n    //error.response.data\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_RESET }); //to reset any review succesSubmitted/alreadyExistFail msg\r\n    //included in prodcu detail screen\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const createProductReview = (productId, review) => async ( dispatch, getState ) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n    //dispatch({ type: PRODUCT_CREATE_REVIEW_RESET }); //to reset any review succesSubmitted/alreadyExistFail msg\r\n\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL, \r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2 style={{color: '#32FAE2'}}>{product.name} ( ₹ {product.price} )</h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Build-&-Buy',\r\n  description: 'Build your next and best gaming station',\r\n  keywords: 'electronics, computers, gaming, gamers, peripherals',\r\n}\r\n\r\nexport default Meta;","import React, { useEffect } from \"react\";\r\n//import { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from \"../actions/productActions\";\r\n//import axios from 'axios'\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    //side-effect, async,http req in thunk //linking them here\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      <ProductCarousel />\r\n      <h1 style={{marginTop:'8px'}}>Components & Peripherals</h1>\r\n      {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : \r\n      (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport classes from \"./ProductScreen.module.css\";\r\n//import axios from 'axios';\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Meta from '../components/Meta'\r\n//import { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const [qty, setQty] = useState(1); //useState(0)\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const {id} = useParams();\r\n  const navigate = useNavigate();\r\n  //console.log(params);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const [product, setProduct] = useState({})\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n    loading: loadingProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert(\"Review Submitted!\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      //navigate(`/product/${id}`);\r\n      dispatch(listProductDetails(id)); //alternativ of reload/refresh to show the published review\r\n      //window.location.reload();\r\n    }\r\n\r\n    if (!product._id || product._id !== id) {\r\n      dispatch(listProductDetails(id));\r\n      //dispatch({ type: PRODUCT_CREATE_REVIEW_RESET }); //to reset any review succesSubmitted/alreadyExistFail msg\r\n    }\r\n    //dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n  }, [id, dispatch, successProductReview, product._id]);\r\n\r\n  const addToCartHandler = () => {\r\n    //console.log('adding to cart');\r\n    navigate(`/cart/${id}?qty=${qty}`);\r\n    //optional?\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(id, { rating, comment }));\r\n    //dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n  };\r\n\r\n  //<ListGroup variant='flush'>\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-outline-secondary my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup>\r\n                <ListGroup.Item className={classes.border}>\r\n                  <h3 style={{ color: \"#32FBE2\" }}>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className={classes.padding}>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item\r\n                  style={{ paddingBottom: \"14px\" }}\r\n                  className={classes.border}\r\n                >\r\n                  Price: ₹{product.price}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className={classes.padding}>\r\n                  <h5 style={{ color: \"#32FBE2\" }}>Description</h5>\r\n                  {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>₹{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            style={{ padding: \"0.25rem 0.35rem\" }}\r\n                            className=\"form-select\"\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {\" \"}\r\n                                  {x + 1}{\" \"}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className=\"w-100\"\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                      onClick={addToCartHandler}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p\r\n                      className={classes.border}\r\n                      style={{ paddingBottom: \"27px\" }}\r\n                    >\r\n                      {review.comment}\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                \r\n                  \r\n                    <ListGroup.Item>\r\n                      <h2>Write a Customer Review</h2>\r\n                      {loadingProductReview && (\r\n                        <Message variant=\"success\">\r\n                          {\" \"}\r\n                          Submitting Review...\r\n                        </Message>\r\n                      )}\r\n                      {loadingProductReview && <Loader />}\r\n                      {errorProductReview && (\r\n                        <Message variant=\"danger\">{errorProductReview}</Message>\r\n                      )}\r\n                      {userInfo ? (\r\n                        <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId=\"rating\">\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control\r\n                              className=\"form-select\"\r\n                              as=\"select\"\r\n                              value={rating}\r\n                              onChange={(e) => setRating(e.target.value)}\r\n                            >\r\n                              <option value=\"\">Select...</option>\r\n                              <option value=\"1\">1 - Poor</option>\r\n                              <option value=\"2\">2 - Fair</option>\r\n                              <option value=\"3\">3 - Good</option>\r\n                              <option value=\"4\">4 - Very Good</option>\r\n                              <option value=\"5\">5 - Excellent</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                          <Form.Group controlId=\"comment\">\r\n                            <Form.Label>Comment</Form.Label>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              row=\"3\"\r\n                              value={comment}\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                          <Button\r\n                            disabled={loadingProductReview}\r\n                            type=\"submit\"\r\n                            variant=\"primary\"\r\n                            className=\"mt-3\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </Form>\r\n                      ) : (\r\n                        <Message>\r\n                          Please <Link to=\"/login\">sign in</Link> to write a\r\n                          review{\" \"}\r\n                        </Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  \r\n                \r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  //console.log(data,'data fetched from api');\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));//'cart' identfier \r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  \r\n  dispatch({ type: CART_REMOVE_ITEM, payload: id });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n}","import React, { useEffect } from 'react'\r\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = () => {\r\n    \r\n  const params = useParams();\r\n  const productId = params.id;\r\n  //console.log(params);\r\n  //<Route path=\"/product/:id\" element={<ProductScreen />} />\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  //console.log(location, 'location obj search field');\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const userLogin = useSelector((state) => state.userLogin);\r\n  //const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(cartItems, 'cartItems from cart identifier state')\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n  /*   if(!userInfo){\r\n      navigate(\"/login\");    \r\n    }else{\r\n      navigate('/shipping');//redirect shipping if logged in\r\n    } */\r\n\r\n    navigate('/login/?redirect=/shipping');\r\n     \r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>₹{item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control style={{padding: '0.25rem 0.35rem'}} className='form-select'\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n              ₹{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen;","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  //console.log(userLogin, 'userlogin state');\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {//if (!(userInfo === undefined || userInfo.length === 0))\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      \r\n      <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" type='submit' variant='primary'> Sign In </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation  } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = () => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect);\r\n    }\r\n  }, [navigate, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" type=\"submit\" variant=\"primary\"> Register </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}> Login </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, /* useLocation */ } from \"react-router-dom\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from '../actions/orderActions';\r\n//import classes from \"./ProfileScreen.module.css\";\r\n\r\n//import { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //const location = useLocation();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  //console.log(user, 'user profile details');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  //console.log(userInfo, 'userLogin details');\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { /* success, */ loading: updateLoading } = userUpdateProfile;//for the update msg to vanish\r\n  //console.log(userUpdateProfile, 'updated user data');\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      if (!user || !user.name) {///(!user || !user.name || success)\r\n        //dispatch({ type: USER_UPDATE_PROFILE_RESET });//user-update-bug-fix\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, navigate, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n      //window.setTimeout(function(){window.location.reload()},1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {updateLoading && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr style = {{borderBottom: '3px solid #6F42C1'}}>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr style = {{borderBottom: '3px solid #6F42C1'}} key={order._id}>\r\n                  <td style = {{padding: '10px 0px'}}>{order._id}</td>\r\n                  <td style = {{padding: '10px 0px'}}>{order.createdAt.substring(0, 10)}</td>\r\n                  <td style = {{padding: '10px 0px'}}>{order.totalPrice}</td>\r\n                  <td style = {{padding: '10px 0px'}}>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td style = {{padding: '10px 0px'}}>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td style = {{padding: '10px 0px'}}>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button  variant='secondary' className='btn-sm btn-outline-secondary'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST\r\n} from '../constants/orderConstants';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST });\r\n    //console.log(order);\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.post('/api/orders', order, config);\r\n    //console.log(data,'from server');\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\r\n    //after placing the order//empty the cart\r\n    dispatch({ type: CART_CLEAR_ITEMS });\r\n    //dispatch({ type: CART_CLEAR_ITEMS, payload: data });\r\n    localStorage.removeItem('cartItems');\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    //since not sending any data\r\n    const { data } = await axios.put( `/api/orders/${order._id}/deliver`, {}, config);\r\n\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n    //console.log(data, 'data recieved from server');\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async ( dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put( `/api/orders/${orderId}/pay`, paymentResult, config );\r\n\r\n    dispatch({type: ORDER_PAY_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_MY_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n    //console.log(data);\r\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n\r\n    const { userLogin: { userInfo } } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n    //console.log(data);\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps;","import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = () => {\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address || ''); //useState(shippingAdress.adress || '')//all of them\r\n  const [city, setCity] = useState(shippingAddress.city || '');\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\r\n  const [country, setCountry] = useState(shippingAddress.country || '');\r\n  \r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n/*   useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n  }, [userInfo, history]) */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    navigate('/payment');\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text' \r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" type='submit' variant='primary' disabled={!userInfo}> Continue </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen;","import React, { useState } from 'react';\r\nimport { useNavigate, /* useLocation */ } from \"react-router-dom\";\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  if (!shippingAddress.address) { ///--!shippingAddress\r\n    navigate('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    navigate('/placeorder');\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" type='submit' variant='primary'> Continue </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen;","import React, { useEffect /* useState */ } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst PlaceOrderScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    navigate('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    navigate('/payment');\r\n  }\r\n\r\n  //   Calculate prices(prefer in reducer or in be)\r\n  /*   const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  } */\r\n\r\n  /*   cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  \r\n  cart.shippingPrice = cart.itemsPrice > 9999 ? 0 : 499;\r\n  //cart.taxPrice = (0.18 * cart.itemsPrice).toFixed(2);\r\n  cart.taxPrice = (0.18 * cart.itemsPrice)\r\n  cart.totalPrice =  Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice); */\r\n\r\n  //console.log(cart.shippingPrice, cart.taxPrice, typeof cart.itemsPrice,);\r\n  //avoiding the mutation of cart object\r\n\r\n  const itemsPrice = cart.cartItems.reduce( (acc, item) => acc + item.price * item.qty, 0 );\r\n  const shippingPrice = itemsPrice > 9999 ? 0 : 499;\r\n  const taxPrice = 0.18 * itemsPrice;\r\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n  \r\n  //console.log(cart, 'cart state');\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [navigate, success, order, dispatch]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice, //itemsPrice: itemsPrice,\r\n        shippingPrice,\r\n        taxPrice,\r\n        totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  //console.log(cart, 'order screen after maths');\r\n  //console.log(totalPrice, \"order screen\");\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹ {item.price} = ₹{\" \"}\r\n                          {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹ {itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹ {shippingPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹ {taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹ {totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block mb-1\"\r\n                  disabled={!cart.cartItems.length}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport {  Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nconst OrderScreen = () => {\r\n  \r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const {id} = useParams();  \r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //Total order amount //not sved in db(not included in og schema)//recalculating here\r\n    order.itemsPrice = order.orderItems.reduce( (acc, item) => acc + item.price * item.qty, 0 );\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if(!userInfo){\r\n      navigate('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      //https://www.paypal.com/sdk/js?client-id=${clientId}\r\n      //https://www.paypal.com/sdk/js?client-id=${clientId}&currency=INR\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      }\r\n      document.body.appendChild(script);\r\n    }\r\n\r\n    if(!order || order._id !== id || successPay || successDeliver) {//(!order)\r\n      dispatch({ type: ORDER_PAY_RESET }); //prevents infinite loop //successPay value changes\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(id));\r\n\r\n    } else if (!order.isPaid) {\r\n\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n\r\n      } else {\r\n        setSdkReady(true);\r\n      } \r\n     /*  if (!window.paypal) {\r\n        addPayPalScript()\r\n\r\n      } */\r\n\r\n    }\r\n    \r\n  }, [dispatch, id, order, successPay, successDeliver, navigate, userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    //console.log(paymentResult,'payment result from paypal');\r\n    dispatch(payOrder(id, paymentResult));\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  }\r\n\r\n  ///{<PayPalButton currency=\"INR\" amount={order.totalPrice} onSuccess={successPaymentHandler} />}\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order ID: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹ {item.price} = ₹ {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹ {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>₹ {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹ {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹ {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  }, [dispatch, navigate, userInfo, successDelete])\r\n  //running useEffect again on deleting a user, to dispatch lustUsers-to get the new updated userLists after the reload/re-render \r\n\r\n  const deleteHandler = (id) => {\r\n    //console.log('delete');\r\n    if (window.confirm('Are you sure')) {\r\n        dispatch(deleteUser(id));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr style = {{borderBottom: '3px solid #6F42C1'}}>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr style = {{borderBottom: '3px solid #6F42C1'}} key={user._id}>\r\n                <td style = {{padding: '10px 0px'}}>{user._id}</td>\r\n                <td style = {{padding: '10px 0px'}}>{user.name}</td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = () => {\r\n  \r\n  const navigate = useNavigate();\r\n  const {id} = useParams();  \r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n    if (successUpdate) {\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n        navigate('/admin/userlist');\r\n        dispatch({type: USER_DETAILS_RESET }); //admin userProfile details wrong info after editing any user fixed\r\n    } else {\r\n        if (!user.name || user._id !== id) { //check\r\n            dispatch(getUserDetails(id));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsAdmin(user.isAdmin);\r\n        } \r\n    }\r\n    \r\n  }, [dispatch, id, user, navigate, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: id, name, email, isAdmin }));\r\n    //console.log('Admin Updating user details');\r\n  }\r\n  //className='btn btn-outline-secondary my-3'\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-outline-secondary my-3'> Go Back </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mt-2\" controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button className=\"mt-3\" type='submit' variant='primary'> Update </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ( ) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [dispatch, navigate, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr style = {{borderBottom: '3px solid #6F42C1'}}>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>Details</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr style = {{borderBottom: '3px solid #6F42C1'}} key={order._id}>\r\n                <td style = {{padding: '10px 0px'}} >{order._id}</td>\r\n                <td style = {{padding: '10px 0px'}}>{order.user && order.user.name}</td>\r\n                <td style = {{padding: '10px 0px'}}>{order.createdAt.substring(0, 10)}</td>\r\n                <td style = {{padding: '10px 0px'}}>₹ {order.totalPrice}</td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td style = {{padding: '10px 0px'}}>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='secondary' className='btn-sm btn-outline-secondary'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Routes>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />} />\r\n            <Route path=\"/shipping\" element={<ShippingScreen />} />\r\n            <Route path=\"/payment\" element={<PaymentScreen />} />\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\r\n            <Route path=\"/login\" element={<LoginScreen />} />\r\n            <Route path=\"/register\" element={<RegisterScreen />} />\r\n            <Route path=\"/profile\" element={<ProfileScreen />} />\r\n            <Route path=\"/product/:id\" element={<ProductScreen />} />\r\n            <Route path=\"/cart\">\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />} />\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />} />\r\n            <Route path=\"/admin/orderList\" element={<OrderListScreen />} />\r\n            <Route path=\"/\" element={<HomeScreen />} />\r\n          </Routes>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\r\nimport {cartReducer } from './reducers/cartReducers';\r\nimport { \r\n  userLoginReducer, userRegisterReducer, userDetailsReducer, \r\n  userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer\r\n} from './reducers/userReducers';\r\nimport { \r\n  orderCreateReducer, orderDetailsReducer, orderPayReducer, \r\n  orderListMyReducer, orderDeliverReducer, orderListReducer\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({  \r\n    productList: productListReducer,   \r\n    productDetails: productDetailsReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : \"\";\r\n\r\nconst initialState = {\r\n  cart: { \r\n    cartItems: cartItemsFromStorage, \r\n    shippingAddress: shippingAddressFromStorage,  \r\n    paymentMethod: paymentMethodFromStorage \r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconsole.log(initialState, 'store initialState');\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","import {\r\n  PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  //state:initialState\r\n  switch (action.type) {\r\n\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = ( state = { product: { reviews: [] } }, action ) => {\r\n\r\n  switch (action.type) { \r\n\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true,  };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { \r\n  CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, \r\n  CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS \r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n  switch (action.type) {\r\n\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      //console.log(item,'item payload');\r\n      //console.log(state, 'state cartReducer');\r\n\r\n      const existingItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) => x.product === existingItem.product ? item : x)\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        }\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n      }\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload\r\n      }\r\n      \r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload\r\n      }  \r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: []\r\n      }  \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    \r\n\r\n   /*  case USER_UPDATE_PROFILE_RESET:\r\n      return {} *///bug fix-update profile\r\n    \r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user:{} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };//user: action.payload\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\r\n  switch (action.type) {\r\n  \r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    \r\n    case USER_LIST_RESET:\r\n      return { users: [] }  \r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {}  \r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true }\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return { loading: false, success: true}\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = ( state = { loading: true, orderItems: [], shippingAddress: {} }, action ) => {\r\n\r\n  switch (action.type) {\r\n  \r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n\r\n  switch (action.type) {\r\n    \r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }  \r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter> <Provider store={store}> <App /> </Provider> </BrowserRouter>, document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"ProductScreen_border__G01s8\",\"padding\":\"ProductScreen_padding__3doeI\",\"selectForm\":\"ProductScreen_selectForm__1OcnY\"};"],"sourceRoot":""}